# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

appName = "merchandise-in-baggage-frontend"
play.http.router = prod.Routes

play.http.filters = play.api.http.EnabledFilters

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Custom error handler
play.http.errorHandler = "uk.gov.hmrc.merchandiseinbaggage.config.ErrorHandler"

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

play.filters.enabled += play.filters.csp.CSPFilter

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.merchandiseinbaggage.config.ModuleBindings"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
# Not set here so that MDTP frontends share the same secret key in the local environment
# (see common.conf in frontend-bootstrap).
# In server environments the secret comes from app-config-common
# play.http.secret.key="EQdp1FhTyjA5jSMiALAVwLPI0HCPWL8QjbHhI1KiLjZaGcTV8tHl7t40Ewpam3tW"

microservice {
  services {
    address-lookup-frontend {
      protocol = http
      host = localhost
      port = 9028
      callback = "http://localhost:8281"
    }

    merchandise-in-baggage {
      protocol = http
      host = localhost
      port = 8280
    }

    payment {
      protocol = http
      host = localhost
      port = 9057
    }

    tps-payments-backend {
     protocol = http
     host = localhost
     port = 9125
   }

    auth {
       protocol = http
       host = localhost
       port = 8500
    }

    feedback-frontend {
      url = "http://localhost:9514/feedback"
    }

  }
}

tracking-consent-frontend {
  gtm.container = "b"
}

contact-frontend {
  host = "http://localhost:9250"
  serviceId = "mib"
}

#play session timeout
session.timeoutSeconds = 3600

accessibility-statement.service-path = "/declare-commercial-goods"

mongodb {
  uri = "mongodb://localhost:27017/merchandise-in-baggage-frontend"
  timeToLiveInSeconds = 3600
}

payments {
  returnUrl = "http://localhost:8281/declare-commercial-goods/declaration-confirmation"
  backUrl = "http://localhost:8281/declare-commercial-goods/check-your-answers"
}


timeout {
  timeout = 900
  countdown = 120
}

stride {
  roles = ["tps_payment_taker_call_handler", "digital_mib_call_handler"]
}

assistedDigital = false

play.i18n.langs = ["en", "cy"]

features {
  welsh-translation: true
}

tps-navigation {
  back = "http://localhost:8281/declare-commercial-goods/check-your-answers"
  reset = "http://localhost:8281/declare-commercial-goods/import-export-choice"
  finish = "http://localhost:8281/declare-commercial-goods/declaration-confirmation"
}

# For local testing
schedules {
  update-created-at-field-job {
    enabled         = true
    description     = "Update createdAt field in DeclarationJourneyRepository"
    expression      = "0_*/5_8-18_*_*_?" # run job every 5 minutes between 8-18
    lockTimeout     = 10 # how long the repository should be locked for the job to complete in seconds (releases repo upon completion of the job or on timeout expiry)
    updateLimit     = 2 # how many documents should be updated in single job run
  }
}
